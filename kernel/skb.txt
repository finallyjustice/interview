skb = alloc_skb(1500, GFP_ATOMIC);
skb->dev = dev

skb_reserve(skb, 2 + sizeof(struct ethhdr)
                   + sizeof(struct iphdr)
                   + sizeof(struct udphdr)
                   + sizeof(net_data));

p = skb_push(skb, sizeof(net_data));
memcpy(p, net_data, sizeof(net_data));

p = skb_push(skb, sizeof(struct udphdr));
udphdr = (struct udphdr *)p;
// ... fill udp header
skb_reset_transport_header(skb);

p = skb_push(skb, sizeof(struct iphdr));
iphdr = (struct iphdr *)p;
// ... fill ip header
skb_reset_network_header(skb);

p = skb_push(skb, sizeof(struct ethhdr));
ethhdr = (struct ethhdr *)p;
// ... fill ethernet header
skb_reset_mac_header(skb);

dev_queue_xmit(skb);
